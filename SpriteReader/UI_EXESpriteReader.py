# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'EXESpriteReader.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1295, 639)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.baseHLayout = QtWidgets.QHBoxLayout()
        self.baseHLayout.setObjectName("baseHLayout")
        self.spriteLayout = QtWidgets.QVBoxLayout()
        self.spriteLayout.setObjectName("spriteLayout")
        self.spriteLabel = QtWidgets.QLabel(self.centralwidget)
        self.spriteLabel.setObjectName("spriteLabel")
        self.spriteLayout.addWidget(self.spriteLabel)
        self.spriteList = QtWidgets.QListWidget(self.centralwidget)
        self.spriteList.setMinimumSize(QtCore.QSize(300, 0))
        self.spriteList.setMaximumSize(QtCore.QSize(400, 16777215))
        self.spriteList.setAlternatingRowColors(True)
        self.spriteList.setObjectName("spriteList")
        self.spriteLayout.addWidget(self.spriteList)
        self.baseHLayout.addLayout(self.spriteLayout)
        self.graphicsLayout = QtWidgets.QVBoxLayout()
        self.graphicsLayout.setObjectName("graphicsLayout")
        self.graphicsLabel = QtWidgets.QLabel(self.centralwidget)
        self.graphicsLabel.setObjectName("graphicsLabel")
        self.graphicsLayout.addWidget(self.graphicsLabel)
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.graphicsView.sizePolicy().hasHeightForWidth())
        self.graphicsView.setSizePolicy(sizePolicy)
        self.graphicsView.setMinimumSize(QtCore.QSize(500, 0))
        brush = QtGui.QBrush(QtGui.QColor(200, 220, 255))
        brush.setStyle(QtCore.Qt.CrossPattern)
        self.graphicsView.setBackgroundBrush(brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.NoBrush)
        self.graphicsView.setForegroundBrush(brush)
        self.graphicsView.setInteractive(True)
        self.graphicsView.setResizeAnchor(QtWidgets.QGraphicsView.AnchorViewCenter)
        self.graphicsView.setObjectName("graphicsView")
        self.graphicsLayout.addWidget(self.graphicsView)
        self.graphicsScaleSlider = QtWidgets.QSlider(self.centralwidget)
        self.graphicsScaleSlider.setMinimum(0)
        self.graphicsScaleSlider.setMaximum(40)
        self.graphicsScaleSlider.setSingleStep(5)
        self.graphicsScaleSlider.setPageStep(5)
        self.graphicsScaleSlider.setSliderPosition(10)
        self.graphicsScaleSlider.setOrientation(QtCore.Qt.Horizontal)
        self.graphicsScaleSlider.setObjectName("graphicsScaleSlider")
        self.graphicsLayout.addWidget(self.graphicsScaleSlider)
        self.baseHLayout.addLayout(self.graphicsLayout)
        self.animLayout = QtWidgets.QVBoxLayout()
        self.animLayout.setObjectName("animLayout")
        self.animLabel = QtWidgets.QLabel(self.centralwidget)
        self.animLabel.setObjectName("animLabel")
        self.animLayout.addWidget(self.animLabel)
        self.animList = QtWidgets.QListWidget(self.centralwidget)
        self.animList.setMinimumSize(QtCore.QSize(150, 0))
        self.animList.setMaximumSize(QtCore.QSize(200, 16777215))
        self.animList.setAlternatingRowColors(True)
        self.animList.setObjectName("animList")
        self.animLayout.addWidget(self.animList)
        self.frameLabel = QtWidgets.QLabel(self.centralwidget)
        self.frameLabel.setObjectName("frameLabel")
        self.animLayout.addWidget(self.frameLabel)
        self.frameList = QtWidgets.QListWidget(self.centralwidget)
        self.frameList.setMinimumSize(QtCore.QSize(150, 0))
        self.frameList.setMaximumSize(QtCore.QSize(200, 16777215))
        self.frameList.setAlternatingRowColors(True)
        self.frameList.setObjectName("frameList")
        self.animLayout.addWidget(self.frameList)
        self.animCheck = QtWidgets.QCheckBox(self.centralwidget)
        self.animCheck.setEnabled(False)
        self.animCheck.setObjectName("animCheck")
        self.animLayout.addWidget(self.animCheck)
        self.baseHLayout.addLayout(self.animLayout)
        self.oamLayout = QtWidgets.QVBoxLayout()
        self.oamLayout.setObjectName("oamLayout")
        self.oamLabel = QtWidgets.QLabel(self.centralwidget)
        self.oamLabel.setObjectName("oamLabel")
        self.oamLayout.addWidget(self.oamLabel)
        self.oamList = QtWidgets.QListWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.oamList.sizePolicy().hasHeightForWidth())
        self.oamList.setSizePolicy(sizePolicy)
        self.oamList.setMaximumSize(QtCore.QSize(200, 16777215))
        self.oamList.setAlternatingRowColors(True)
        self.oamList.setObjectName("oamList")
        self.oamLayout.addWidget(self.oamList)
        self.palLabel = QtWidgets.QLabel(self.centralwidget)
        self.palLabel.setObjectName("palLabel")
        self.oamLayout.addWidget(self.palLabel)
        self.palList = QtWidgets.QListWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.palList.sizePolicy().hasHeightForWidth())
        self.palList.setSizePolicy(sizePolicy)
        self.palList.setMinimumSize(QtCore.QSize(200, 300))
        self.palList.setMaximumSize(QtCore.QSize(200, 300))
        font = QtGui.QFont()
        font.setFamily("ＭＳ ゴシック")
        font.setPointSize(10)
        self.palList.setFont(font)
        self.palList.setProperty("isWrapping", False)
        self.palList.setObjectName("palList")
        self.oamLayout.addWidget(self.palList)
        self.palSelect = QtWidgets.QSpinBox(self.centralwidget)
        self.palSelect.setMaximumSize(QtCore.QSize(200, 16777215))
        self.palSelect.setObjectName("palSelect")
        self.oamLayout.addWidget(self.palSelect)
        self.palSaveButton = QtWidgets.QPushButton(self.centralwidget)
        self.palSaveButton.setMaximumSize(QtCore.QSize(200, 16777215))
        self.palSaveButton.setObjectName("palSaveButton")
        self.oamLayout.addWidget(self.palSaveButton)
        self.baseHLayout.addLayout(self.oamLayout)
        self.horizontalLayout.addLayout(self.baseHLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1295, 31))
        self.menubar.setObjectName("menubar")
        self.fileMenu = QtWidgets.QMenu(self.menubar)
        self.fileMenu.setObjectName("fileMenu")
        self.spriteMenu = QtWidgets.QMenu(self.menubar)
        self.spriteMenu.setObjectName("spriteMenu")
        self.helpMenu = QtWidgets.QMenu(self.menubar)
        self.helpMenu.setObjectName("helpMenu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.openAction = QtWidgets.QAction(MainWindow)
        self.openAction.setObjectName("openAction")
        self.saveAction = QtWidgets.QAction(MainWindow)
        self.saveAction.setObjectName("saveAction")
        self.exitAction = QtWidgets.QAction(MainWindow)
        self.exitAction.setObjectName("exitAction")
        self.dumpAction = QtWidgets.QAction(MainWindow)
        self.dumpAction.setObjectName("dumpAction")
        self.importAction = QtWidgets.QAction(MainWindow)
        self.importAction.setObjectName("importAction")
        self.linkAction = QtWidgets.QAction(MainWindow)
        self.linkAction.setObjectName("linkAction")
        self.aboutAction = QtWidgets.QAction(MainWindow)
        self.aboutAction.setObjectName("aboutAction")
        self.openSpriteAction = QtWidgets.QAction(MainWindow)
        self.openSpriteAction.setObjectName("openSpriteAction")
        self.repointAction = QtWidgets.QAction(MainWindow)
        self.repointAction.setCheckable(False)
        self.repointAction.setObjectName("repointAction")
        self.saveImageAction = QtWidgets.QAction(MainWindow)
        self.saveImageAction.setObjectName("saveImageAction")
        self.flipAction = QtWidgets.QAction(MainWindow)
        self.flipAction.setObjectName("flipAction")
        self.exDumpAction = QtWidgets.QAction(MainWindow)
        self.exDumpAction.setObjectName("exDumpAction")
        self.combineAction = QtWidgets.QAction(MainWindow)
        self.combineAction.setObjectName("combineAction")
        self.fileMenu.addAction(self.openAction)
        self.fileMenu.addAction(self.openSpriteAction)
        self.fileMenu.addAction(self.saveAction)
        self.fileMenu.addAction(self.exitAction)
        self.spriteMenu.addAction(self.dumpAction)
        self.spriteMenu.addAction(self.exDumpAction)
        self.spriteMenu.addAction(self.repointAction)
        self.spriteMenu.addAction(self.importAction)
        self.spriteMenu.addAction(self.saveImageAction)
        self.spriteMenu.addAction(self.flipAction)
        self.spriteMenu.addAction(self.combineAction)
        self.helpMenu.addAction(self.linkAction)
        self.helpMenu.addAction(self.aboutAction)
        self.menubar.addAction(self.fileMenu.menuAction())
        self.menubar.addAction(self.spriteMenu.menuAction())
        self.menubar.addAction(self.helpMenu.menuAction())

        self.retranslateUi(MainWindow)
        self.openAction.triggered.connect(MainWindow.openFile)
        self.spriteList.currentRowChanged['int'].connect(MainWindow.guiSpriteItemActivated)
        self.animList.currentRowChanged['int'].connect(MainWindow.guiAnimItemActivated)
        self.frameList.currentRowChanged['int'].connect(MainWindow.guiFrameItemActivated)
        self.openSpriteAction.triggered.connect(MainWindow.openSprite)
        self.exitAction.triggered.connect(MainWindow.close)
        self.dumpAction.triggered.connect(MainWindow.dumpSprite)
        self.saveImageAction.triggered.connect(MainWindow.saveFrameImage)
        self.palSelect.valueChanged['int'].connect(MainWindow.changePalette)
        self.palList.itemDoubleClicked['QListWidgetItem*'].connect(MainWindow.guiPalItemActivated)
        self.saveAction.triggered.connect(MainWindow.saveRomFile)
        self.oamList.itemDoubleClicked['QListWidgetItem*'].connect(MainWindow.guiOAMItemActivated)
        self.repointAction.triggered.connect(MainWindow.repoint)
        self.palSaveButton.pressed.connect(MainWindow.writePalData)
        self.flipAction.triggered.connect(MainWindow.flipSprite)
        self.exDumpAction.triggered.connect(MainWindow.exDumpSprite)
        self.graphicsScaleSlider.valueChanged['int'].connect(MainWindow.changeViewScale)
        self.importAction.triggered.connect(MainWindow.importSprite)
        self.animList.itemDoubleClicked['QListWidgetItem*'].connect(MainWindow.repointAnimation)
        self.spriteList.itemDoubleClicked['QListWidgetItem*'].connect(MainWindow.labelSprite)
        self.combineAction.triggered.connect(MainWindow.combineSprite)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "ロックマンエグゼ スプライトリーダー by ideal"))
        self.spriteLabel.setText(_translate("MainWindow", "スプライト"))
        self.spriteList.setStatusTip(_translate("MainWindow", "アイテムをダブルクリックするとラベルをつけられます"))
        self.graphicsLabel.setText(_translate("MainWindow", "スプライトビュー"))
        self.graphicsScaleSlider.setStatusTip(_translate("MainWindow", "表示サイズを変更できます"))
        self.animLabel.setText(_translate("MainWindow", "アニメーション"))
        self.animList.setStatusTip(_translate("MainWindow", "アイテムをダブルクリックするとアニメーションをリポイントできます"))
        self.frameLabel.setText(_translate("MainWindow", "フレーム"))
        self.animCheck.setText(_translate("MainWindow", "アニメーション再生（未実装）"))
        self.oamLabel.setText(_translate("MainWindow", "OAM"))
        self.palLabel.setText(_translate("MainWindow", "パレット"))
        self.palList.setStatusTip(_translate("MainWindow", "アイテムをダブルクリックすると色を変更できます"))
        self.palSaveButton.setText(_translate("MainWindow", "編集したパレットを書き込む"))
        self.fileMenu.setTitle(_translate("MainWindow", "ファイル"))
        self.spriteMenu.setTitle(_translate("MainWindow", "スプライト"))
        self.helpMenu.setTitle(_translate("MainWindow", "ヘルプ"))
        self.openAction.setText(_translate("MainWindow", "ROMファイルを開く"))
        self.openAction.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.saveAction.setText(_translate("MainWindow", "名前をつけてROMを保存"))
        self.saveAction.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.exitAction.setText(_translate("MainWindow", "終了"))
        self.exitAction.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.dumpAction.setText(_translate("MainWindow", "ダンプ"))
        self.dumpAction.setStatusTip(_translate("MainWindow", "選択しているスプライトをファイルに出力します"))
        self.importAction.setText(_translate("MainWindow", "インポート"))
        self.importAction.setStatusTip(_translate("MainWindow", "指定したアドレスにファイルから読み込んだスプライトをインポートします"))
        self.linkAction.setText(_translate("MainWindow", "リンク（未実装）"))
        self.aboutAction.setText(_translate("MainWindow", "このツールについて（未実装）"))
        self.openSpriteAction.setText(_translate("MainWindow", "スプライトを開く"))
        self.openSpriteAction.setShortcut(_translate("MainWindow", "Ctrl+Shift+O"))
        self.repointAction.setText(_translate("MainWindow", "リポイント"))
        self.repointAction.setToolTip(_translate("MainWindow", "選択しているスプライトのポインタを書き換えて\n"
"別のアドレスのスプライトを読み込ませることが出来ます"))
        self.repointAction.setStatusTip(_translate("MainWindow", "選択しているスプライトのポインタを書き換えて，別のアドレスのスプライトを読み込ませることが出来ます"))
        self.saveImageAction.setText(_translate("MainWindow", "現在のフレームを画像に出力"))
        self.flipAction.setText(_translate("MainWindow", "水平反転"))
        self.exDumpAction.setText(_translate("MainWindow", "拡張してダンプ"))
        self.exDumpAction.setStatusTip(_translate("MainWindow", "選択しているスプライトを32アニメーション，各16フレームのスペースを確保したスプライトに変換して出力します"))
        self.combineAction.setText(_translate("MainWindow", "スプライトを結合"))
        self.combineAction.setStatusTip(_translate("MainWindow", "選択中のスプライトとファイルから読み込んだスプライトを結合します"))

